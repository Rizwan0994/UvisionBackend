{
  "openapi": "3.1.0",
  "info": {
    "title": "Uvision API Documentation",
    "version": "1.0.0",
    "description": "Comprehensive API documentation for Uvision Backend",
    "contact": {
      "name": "API Support",
      "email": "support@uvision.com"
    },
    "license": {
      "name": "MIT",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Development server"
    },
    {
      "url": "https://api.uvision.com",
      "description": "Production server"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT",
        "description": "JWT authorization header using the Bearer scheme."
      },
      "ApiKeyAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "x-access-token",
        "description": "API key for accessing protected endpoints"
      }
    },
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 0
          },
          "message": {
            "type": "string",
            "example": "Error message"
          },
          "error": {
            "type": "object"
          }
        }
      },
      "Success": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "Success message"
          },
          "data": {
            "type": "object"
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "email": {
            "type": "string",
            "format": "email",
            "example": "user@example.com"
          },
          "name": {
            "type": "string",
            "example": "John Doe"
          },
          "profilePicture": {
            "type": "string",
            "example": "https://example.com/profile.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "title": {
            "type": "string",
            "example": "Project Discussion"
          },
          "description": {
            "type": "string",
            "example": "Discussion about project requirements"
          },
          "createdBy": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "content": {
            "type": "string",
            "example": "Hello, world!"
          },
          "senderId": {
            "type": "integer",
            "example": 1
          },
          "chatId": {
            "type": "integer",
            "example": 1
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "required": [
          "email",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "user@example.com"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "password123"
          }
        }
      },
      "SignUpRequest": {
        "type": "object",
        "required": [
          "email",
          "name",
          "password"
        ],
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User's email address",
            "example": "newuser@example.com"
          },
          "name": {
            "type": "string",
            "description": "User's full name",
            "example": "John Doe"
          },
          "profilePicture": {
            "type": "string",
            "description": "URL to user's profile picture",
            "example": "https://example.com/profile.jpg"
          },
          "password": {
            "type": "string",
            "format": "password",
            "description": "User's password",
            "example": "password123"
          }
        }
      },
      "ChangePasswordRequest": {
        "type": "object",
        "required": [
          "currentPassword",
          "newPassword",
          "confirmPassword"
        ],
        "properties": {
          "currentPassword": {
            "type": "string",
            "format": "password",
            "description": "User's current password",
            "example": "oldpassword123"
          },
          "newPassword": {
            "type": "string",
            "format": "password",
            "description": "User's new password",
            "example": "newpassword123"
          },
          "confirmPassword": {
            "type": "string",
            "format": "password",
            "description": "Confirmation of new password",
            "example": "newpassword123"
          }
        }
      },
      "AuthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "integer",
            "example": 1
          },
          "message": {
            "type": "string",
            "example": "Success"
          },
          "data": {
            "type": "object",
            "properties": {
              "user": {
                "$ref": "#/components/schemas/User"
              },
              "token": {
                "type": "string",
                "description": "JWT access token",
                "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
              }
            }
          }
        }
      },
      "ChatCreateRequest": {
        "type": "object",
        "required": [
          "title",
          "type"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Chat title/name",
            "example": "Project Discussion"
          },
          "description": {
            "type": "string",
            "description": "Chat description",
            "example": "Discussion about project requirements"
          },
          "type": {
            "type": "string",
            "enum": [
              "GROUP",
              "DIRECT"
            ],
            "description": "Type of chat",
            "example": "GROUP"
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "integer"
            },
            "description": "Array of user IDs to add to chat",
            "example": [
              1,
              2,
              3
            ]
          }
        }
      },
      "ChatListRequest": {
        "type": "object",
        "properties": {
          "page": {
            "type": "integer",
            "minimum": 1,
            "example": 1
          },
          "limit": {
            "type": "integer",
            "minimum": 1,
            "maximum": 100,
            "example": 20
          },
          "search": {
            "type": "string",
            "description": "Search term for chat title",
            "example": "project"
          },
          "type": {
            "type": "string",
            "enum": [
              "GROUP",
              "DIRECT"
            ],
            "description": "Filter by chat type"
          }
        }
      },
      "ChatDetailRequest": {
        "type": "object",
        "required": [
          "chatId"
        ],
        "properties": {
          "chatId": {
            "type": "integer",
            "description": "Chat ID to get details for",
            "example": 1
          }
        }
      },
      "MuteNotificationRequest": {
        "type": "object",
        "required": [
          "chatId",
          "isMuted"
        ],
        "properties": {
          "chatId": {
            "type": "integer",
            "description": "Chat ID to update",
            "example": 1
          },
          "isMuted": {
            "type": "boolean",
            "description": "Whether to mute notifications",
            "example": true
          }
        }
      },
      "AnnouncementRequest": {
        "type": "object",
        "required": [
          "chatId",
          "message"
        ],
        "properties": {
          "chatId": {
            "type": "integer",
            "description": "Chat ID for announcement",
            "example": 1
          },
          "message": {
            "type": "string",
            "description": "Announcement message",
            "example": "Important: Meeting tomorrow at 10 AM"
          },
          "priority": {
            "type": "string",
            "enum": [
              "LOW",
              "MEDIUM",
              "HIGH",
              "URGENT"
            ],
            "description": "Announcement priority",
            "example": "HIGH"
          }
        }
      }
    },
    "responses": {
      "UnauthorizedError": {
        "description": "Authentication information is missing or invalid",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "status": 0,
              "message": "Unauthorized access"
            }
          }
        }
      },
      "NotFoundError": {
        "description": "The specified resource was not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "status": 0,
              "message": "Resource not found"
            }
          }
        }
      },
      "ValidationError": {
        "description": "Validation error in request data",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "status": 0,
              "message": "Validation failed",
              "error": {
                "field": "Field validation error message"
              }
            }
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    },
    {
      "ApiKeyAuth": []
    }
  ],
  "tags": [
    {
      "name": "Authentication",
      "description": "User authentication and authorization endpoints"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Chat",
      "description": "Chat and messaging operations"
    },
    {
      "name": "Messages",
      "description": "Message management operations"
    },
    {
      "name": "Profile",
      "description": "User profile management"
    },
    {
      "name": "Notifications",
      "description": "Push notification operations"
    },
    {
      "name": "Logs",
      "description": "System logging operations"
    },
    {
      "name": "Version",
      "description": "Application version management"
    },
    {
      "name": "Health",
      "description": "Health check and monitoring"
    }
  ],
  "paths": {
    "/auth/signup": {
      "post": {
        "summary": "Register a new user",
        "description": "Create a new user account with email, name, and password",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SignUpRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "409": {
            "description": "User already exists",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "status": 0,
                  "message": "User already exists with this email"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user with email and password",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthResponse"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "status": 0,
                  "message": "Invalid email or password"
                }
              }
            }
          }
        }
      }
    },
    "/auth/verifyToken": {
      "get": {
        "summary": "Verify JWT token",
        "description": "Validate the provided JWT token and return user information",
        "tags": [
          "Authentication"
        ],
        "security": [],
        "parameters": [
          {
            "in": "header",
            "name": "x-access-token",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "JWT token to verify",
            "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
          }
        ],
        "responses": {
          "200": {
            "description": "Token is valid",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Token is valid"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "user": {
                          "$ref": "#/components/schemas/User"
                        },
                        "tokenValid": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Token missing or malformed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/auth/changePassword": {
      "post": {
        "summary": "Change user password",
        "description": "Change the password for an authenticated user",
        "tags": [
          "Authentication"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangePasswordRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Password changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Password changed successfully"
                    },
                    "data": {
                      "type": "object"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Password validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "status": 0,
                  "message": "Current password is incorrect"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/chat/updateMuteNotification": {
      "post": {
        "summary": "Update chat notification settings",
        "description": "Mute or unmute notifications for a specific chat",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MuteNotificationRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Notification settings updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Notification settings updated"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "chatId": {
                          "type": "integer",
                          "example": 1
                        },
                        "isMuted": {
                          "type": "boolean",
                          "example": true
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/chat/info": {
      "post": {
        "summary": "Get chat details",
        "description": "Retrieve detailed information about a specific chat",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatDetailRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat details retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Chat details retrieved"
                    },
                    "data": {
                      "allOf": [
                        {
                          "$ref": "#/components/schemas/Chat"
                        },
                        {
                          "type": "object",
                          "properties": {
                            "participants": {
                              "type": "array",
                              "items": {
                                "$ref": "#/components/schemas/User"
                              }
                            },
                            "lastMessage": {
                              "$ref": "#/components/schemas/Message"
                            },
                            "unreadCount": {
                              "type": "integer",
                              "example": 3
                            }
                          }
                        }
                      ]
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "404": {
            "$ref": "#/components/responses/NotFoundError"
          }
        }
      }
    },
    "/chat/announcement": {
      "post": {
        "summary": "Create chat announcement",
        "description": "Create an announcement for a specific chat",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AnnouncementRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Announcement created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Announcement created successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "example": 1
                        },
                        "chatId": {
                          "type": "integer",
                          "example": 1
                        },
                        "message": {
                          "type": "string",
                          "example": "Important: Meeting tomorrow at 10 AM"
                        },
                        "priority": {
                          "type": "string",
                          "example": "HIGH"
                        },
                        "createdBy": {
                          "type": "integer",
                          "example": 1
                        },
                        "createdAt": {
                          "type": "string",
                          "format": "date-time"
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Insufficient permissions to create announcement",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/chat/announcement/list": {
      "post": {
        "summary": "Get chat announcements",
        "description": "Retrieve all announcements for the authenticated user",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Announcements retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Announcements retrieved successfully"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "example": 1
                          },
                          "chatId": {
                            "type": "integer",
                            "example": 1
                          },
                          "chatTitle": {
                            "type": "string",
                            "example": "Project Discussion"
                          },
                          "message": {
                            "type": "string",
                            "example": "Important: Meeting tomorrow at 10 AM"
                          },
                          "priority": {
                            "type": "string",
                            "example": "HIGH"
                          },
                          "createdBy": {
                            "$ref": "#/components/schemas/User"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "isRead": {
                            "type": "boolean",
                            "example": false
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/chat/create": {
      "post": {
        "summary": "Create a new chat",
        "description": "Create a new group chat or direct message chat",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatCreateRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Chat created successfully"
                    },
                    "data": {
                      "$ref": "#/components/schemas/Chat"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/ValidationError"
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/chat/list": {
      "post": {
        "summary": "Get chat list",
        "description": "Retrieve paginated list of user's chats",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Chat list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "message": {
                      "type": "string",
                      "example": "Chats retrieved successfully"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "chats": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Chat"
                          }
                        },
                        "pagination": {
                          "type": "object",
                          "properties": {
                            "page": {
                              "type": "integer"
                            },
                            "limit": {
                              "type": "integer"
                            },
                            "total": {
                              "type": "integer"
                            },
                            "totalPages": {
                              "type": "integer"
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/chat/detail/list": {
      "post": {
        "summary": "Get detailed chat list",
        "description": "Retrieve detailed information about multiple chats",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "object",
                    "description": "Query parameters for filtering"
                  },
                  "page": {
                    "type": "integer",
                    "example": 1
                  },
                  "limit": {
                    "type": "integer",
                    "example": 20
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Detailed chat list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Success"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/chat/grouplist": {
      "post": {
        "summary": "Get group chats list",
        "description": "Retrieve list of group chats only",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Group chats retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "allOf": [
                          {
                            "$ref": "#/components/schemas/Chat"
                          },
                          {
                            "type": "object",
                            "properties": {
                              "type": {
                                "type": "string",
                                "enum": [
                                  "GROUP"
                                ]
                              }
                            }
                          }
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/chat/dashboard/list": {
      "post": {
        "summary": "Get dashboard chat list",
        "description": "Retrieve chat list optimized for dashboard display",
        "tags": [
          "Chat"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChatListRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dashboard chat list retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "recentChats": {
                          "type": "array",
                          "items": {
                            "$ref": "#/components/schemas/Chat"
                          }
                        },
                        "unreadCount": {
                          "type": "integer",
                          "example": 5
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          }
        }
      }
    },
    "/query": {
      "post": {
        "summary": "Execute database query",
        "description": "Execute a generic database query (Admin only)",
        "tags": [
          "Database"
        ],
        "security": [
          {
            "bearerAuth": []
          },
          {
            "ApiKeyAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "query": {
                    "type": "string",
                    "description": "SQL query to execute",
                    "example": "SELECT * FROM users LIMIT 10"
                  },
                  "params": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "Query parameters"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Query executed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 1
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/UnauthorizedError"
          },
          "403": {
            "description": "Insufficient permissions",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        }
      }
    },
    "/health-check": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Check if the API is running and healthy",
        "tags": [
          "Health"
        ],
        "security": [],
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Health Check Successful"
                    },
                    "timestamp": {
                      "type": "string",
                      "format": "date-time",
                      "example": "2024-01-01T12:00:00.000Z"
                    },
                    "uptime": {
                      "type": "number",
                      "example": 12345.67,
                      "description": "Server uptime in seconds"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}